plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.10.3'
	id 'org.graalvm.buildtools.native' version '0.9.3'
	id "org.sonarqube" version "3.3"
}

sonarqube {
	properties {
		property "sonar.projectKey", "itp"
		property "sonar.qualitygate.wait", true
	}
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.auth0:java-jwt:3.11.0'
	runtimeOnly 'mysql:mysql-connector-java'
	compileOnly 'org.projectlombok:lombok'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation 'org.modelmapper:modelmapper:2.1.1'
	annotationProcessor 'org.projectlombok:lombok'
	/*implementation 'android.arch.persistence.room:runtime:1.1.1'
	annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
	 developmentOnly 'org.springframework.boot:spring-boot-devtools' */
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.assertj:assertj-core:3.21.0'
	testImplementation 'org.hamcrest:hamcrest:2.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testImplementation 'org.mockito:mockito-core:4.1.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.1.0'
	// add dependencies to H2 in-memory database and Java Persistency API
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

nativeBuild {
	classpath processAotResources.outputs, compileAotJava.outputs
}

nativeTest {
	classpath processAotTestResources.outputs, compileAotTestJava.outputs
}


